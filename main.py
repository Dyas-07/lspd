import discord
from discord.ext import commands
import os
import asyncio

# Importa configura√ß√µes
from config import TOKEN, PUNCH_CHANNEL_ID, WEEKLY_REPORT_CHANNEL_ID, ROLE_ID

# Setup da base de dados
from database import setup_database

# Intents - Certifique-se de que estas est√£o ativadas no Discord Developer Portal!
# MESSAGE_CONTENT √© crucial para comandos de prefixo.
# MEMBERS e PRESENCES s√£o necess√°rios para cogs como status_changer e funcionalidades que interagem com membros.
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.reactions = True
intents.presences = True 

# Bot com prefixo "!"
bot = commands.Bot(command_prefix='!', intents=intents)

# --- COMANDO COM PREFIXO (!mascote) ---
@bot.command(name="mascote", help="Exibe a mascote atual da LSPD.")
async def hello(ctx):
    if not isinstance(ctx.author, discord.Member):
        await ctx.send("Este comando s√≥ pode ser usado num servidor.", ephemeral=True)
        return

    # Tenta obter o cargo pelo ID configurado
    role = discord.utils.get(ctx.author.roles, id=ROLE_ID)

    if role is None:
        await ctx.send("üö´ N√£o tens permiss√µes para isso.", ephemeral=True)
    else:
        await ctx.send("A atual mascote da LSPD √© o SKIBIDI ZEKA!")

# --- Evento on_ready ---
@bot.event
async def on_ready():
    print(f'‚úÖ Bot conectado como {bot.user.name} ({bot.user.id})')

    # Configura base de dados (cria tabelas se n√£o existirem)
    setup_database()
    print('üì¶ Base de dados configurada.')

    # Carrega cogs
    cogs_folder = './cogs'
    if not os.path.exists(cogs_folder):
        print(f"‚ö†Ô∏è Pasta '{cogs_folder}' n√£o encontrada. Certifique-se de que seus cogs est√£o na subpasta 'cogs'.")
        return

    for filename in os.listdir(cogs_folder):
        # Garante que apenas ficheiros .py v√°lidos sejam carregados (ignora __init__.py e __pycache__)
        if filename.endswith('.py') and not filename.startswith('__'):
            try:
                # Carrega a extens√£o (cog)
                await bot.load_extension(f'cogs.{filename[:-3]}')
                print(f'‚úÖ Cog {filename[:-3]} carregado.')
            except Exception as e:
                print(f'‚ùå Erro ao carregar cog {filename[:-3]}: {e}')

    print('üöÄ Todos os cogs foram carregados.')
    print('------') 

    # IMPORTANTE: Se voc√™ planeja usar Slash Commands (comandos de aplica√ß√£o),
    # descomente a linha abaixo para sincroniz√°-los com o Discord.
    # Isto geralmente √© feito APENAS uma vez ap√≥s grandes mudan√ßas nos slash commands.
    # await bot.tree.sync() # Sincroniza a √°rvore de comandos de aplica√ß√£o

# --- Executa o bot ---
if __name__ == '__main__':
    # Certifique-se de que seu DISCORD_BOT_TOKEN est√° configurado nas vari√°veis de ambiente
    if TOKEN is None:
        print("ERRO: DISCORD_BOT_TOKEN n√£o encontrado nas vari√°veis de ambiente.")
        print("Por favor, defina a vari√°vel de ambiente DISCORD_BOT_TOKEN com o token do seu bot.")
    else:
        bot.run(TOKEN)
